name: CD with Gradle

on:
   push:
     branches: [ "feature/deploy-automation" ]
   pull_request:
     branches: [ "feature/deploy-automation" ]

permissions:
  contents: read  # 이 설정은 워크플로우가 리포지토리의 콘텐츠를 읽을 수 있도록 허용합니다.

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: "corretto"
      
    - name: Make application.properties
      run: |
             cd ${{ github.workspace }}/BE/issue-tracker/src/main
             mkdir -p resources
             touch ./resources/application.properties
             echo "***\n***\n***\n***\n***" > ${{ github.workspace }}/BE/issue-tracker/src/main/resources/application.properties
      shell: bash
     
    - name: Build with Gradle
      run: |
            chmod +x ${{ github.workspace }}/BE/issue-tracker/gradlew
            cd ${{ github.workspace }}/BE/issue-tracker
            ./gradlew clean build -x test
    - name: Docker build & push to docker repo
      run: |
            echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
            cd ${{ github.workspace }}/BE/issue-tracker
            docker build -f ./Dockerfile -t ${{ secrets.DOCKER_REPO }}/issue-tracker .
            docker push ${{ secrets.DOCKER_REPO }}/issue-tracker
    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ubuntu
        key: ${{ secrets.KEY }}
        script: |
          sudo docker rm -f $(docker ps -qa)
          sudo docker pull ${{ secrets.DOCKER_REPO }}/issue-tracker
          sudo docker-compose up -d
          sudo docker image prune -f